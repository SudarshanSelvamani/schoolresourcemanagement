# Generated by Django 3.0.8 on 2020-08-29 23:58

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.AutoField(db_column='Student I.D', primary_key=True, serialize=False)),
                ('first_name', models.CharField(db_column='first_Name', max_length=30)),
                ('last_name', models.CharField(db_column='Last_name', max_length=30)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], db_column='Gender', max_length=6)),
                ('date_of_birth', models.DateField()),
                ('phone_number1', phonenumber_field.modelfields.PhoneNumberField(db_column="Father's Name", max_length=128, region=None)),
                ('phone_number2', phonenumber_field.modelfields.PhoneNumberField(db_column="Mother's Name", max_length=128, region=None)),
                ('photo', models.ImageField(db_column='Photo', upload_to='')),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=3, null=True)),
                ('nationality', models.CharField(db_column='Nationality', max_length=30)),
                ('father_name', models.CharField(db_column='Father Name', max_length=30)),
                ('mother_name', models.CharField(db_column='Mother Name', max_length=30)),
                ('address', models.TextField(blank=True, db_column='Address')),
                ('join_date', models.DateField()),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='students.User')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('staff_id', models.AutoField(db_column='Staff I.D', primary_key=True, serialize=False)),
                ('first_name', models.CharField(db_column='First_Name', max_length=30)),
                ('last_name', models.CharField(db_column='Last_name', max_length=30)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], db_column='Gender', max_length=6)),
                ('Posting', models.CharField(choices=[('Associate Professor', 'Associate Professor'), ('Assistant Professor', 'Assistant Professor'), ('Full Professor', 'Full Professor')], max_length=19, null=True)),
                ('photo', models.ImageField(db_column='Photo', upload_to='')),
                ('date_of_birth', models.DateField()),
                ('phone_number1', phonenumber_field.modelfields.PhoneNumberField(db_column='Phone Number 1', max_length=128, region=None)),
                ('phone_number2', phonenumber_field.modelfields.PhoneNumberField(blank=True, db_column='Phone Number 2', max_length=128, region=None)),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=3, null=True)),
                ('nationality', models.CharField(db_column='Nationality', max_length=30)),
                ('father_name', models.CharField(db_column='Father Name', max_length=30)),
                ('mother_name', models.CharField(db_column='Mother Name', max_length=30)),
                ('address', models.TextField(blank=True, db_column='Address')),
                ('join_date', models.DateField()),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='students.User')),
            ],
        ),
        migrations.CreateModel(
            name='Student_map',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roll_number', models.IntegerField(db_column='Roll Number')),
                ('class_i_d', models.CharField(db_column='Name of class', max_length=10)),
                ('student_I_D', models.ForeignKey(db_column='Student I.D', on_delete=django.db.models.deletion.CASCADE, to='students.Student')),
            ],
        ),
        migrations.CreateModel(
            name='Semester2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('math', models.IntegerField(db_column='Maths')),
                ('science', models.IntegerField(db_column='Science')),
                ('history', models.IntegerField(db_column='History')),
                ('english', models.IntegerField(db_column='English')),
                ('language', models.IntegerField(db_column='Language')),
                ('semester2_roll_no', models.ForeignKey(db_column='Roll Number', on_delete=django.db.models.deletion.CASCADE, to='students.Student_map')),
            ],
        ),
        migrations.CreateModel(
            name='Semester1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('math', models.IntegerField(db_column='Maths')),
                ('science', models.IntegerField(db_column='Science')),
                ('history', models.IntegerField(db_column='History')),
                ('english', models.IntegerField(db_column='English')),
                ('language', models.IntegerField(db_column='Language')),
                ('semester1_roll_no', models.ForeignKey(db_column='Roll Number', on_delete=django.db.models.deletion.CASCADE, to='students.Student_map')),
            ],
        ),
        migrations.CreateModel(
            name='home_room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_I_D', models.ForeignKey(db_column='Staff I.D', on_delete=django.db.models.deletion.CASCADE, to='students.Teacher')),
                ('staff_class_i_d', models.ForeignKey(db_column='Name of class', on_delete=django.db.models.deletion.CASCADE, to='students.Student_map')),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('math', models.IntegerField(db_column='Maths')),
                ('science', models.IntegerField(db_column='Science')),
                ('history', models.IntegerField(db_column='History')),
                ('english', models.IntegerField(db_column='English')),
                ('language', models.IntegerField(db_column='Language')),
                ('assignment_roll_no', models.ForeignKey(db_column='Roll Number', on_delete=django.db.models.deletion.CASCADE, to='students.Student_map')),
            ],
        ),
    ]
